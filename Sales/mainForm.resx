<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACkAAAApCAYAAACoYAD2AAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACxMAAAsTAQCanBgAAAmiSURBVFhHpZhHbFXZGccvE8GG
        3pspBpti+/m5PPdn+xnjOiOqUAJDiZ2QDZFAGTGABMoehBAIJDCwQQKBYMOCbsB4IJRsIljQnFkBmglD
        FLqoJ9/vu+88n3f9bFKO9Once8r3/e9Xz7ne3LmxBNXVxbyGhrleJFLklZaWeo2NdTJenZhvbKzV98LC
        Aq+oqCgzPz//twUFBW2FhYXnhbqE/iHvz6X/Wegh4/n5BW3Ca1VRUSRj8uTJXk5OjvCo8err54isWpFT
        4kWjZfI8JyEnSEkvvYGsr69RhqwRYauysrLbZY0REEqRiN8HiXFIgOt7bm7uhby8vBWxWFW/pqa5Im+O
        V1xc9P+DbGio0bny8rI/iOa6RDNGtJgQHIlEUoL0xyNJY0VFxXb8x/Ly0t8LH09Ae9XV0f8NZFlZmff1
        141eLBYNCYhrwiwBzJIFUlJSYiZMmGCGDBlihg8fboYOHWomTpyo44WFQaC+BfLy8o188GX58Fk1NZXq
        SnV1NUouJijpJRlkqQCsWiFMYJYkCLIAmZ85c6bZtGmTOXDggNm5c6c5ePCg2bhxo44z7+5xeUDC+71o
        tQWX+q9AigY80dr3BQXd/uSSKywcDpuxY8ea+/fvG7fdvXtXx5kP7nHJjouvfxcK5XjhcMjDX11cSS+A
        bGqqB+T3qbQHBYXhBpMmTTJnzpyJw/PbpUuX1ORosi+A7lxm5ozvZs7M9L75pqGf4IF6gsR5q6qiS9Gg
        y8xScXGx+tT48ePNtGnTjASXgkxLSzNnz56Nw/Pb5cuXEyDFv3U9+yywIECeJfqlL/i2ubkOH+2H6Wtr
        HZAAjMUqM3DoVCYmCLKysjQoVq9ebebPn6+CmQNkR0dHHJ7fLl68qOPwSk9P1/XsGzZsmPLxgypZBkBR
        RDRaPlmU5dXUVKmPKkCcll4W3kllZjSGoNGjR5sdO3YoiOvXr2s0o0k0hubcdurUKXGDNNXO4MGDza1b
        t3R869atygd+QaDdkZ/311Ao16usrFDlJbRYUVG6OhzOS9oEwQiGmOrcuXMqyLbFixebESNGqE9akB8+
        fNCetVJhVHPLli3TMdvwX/jBF80hxzU92hdaWlvrFxKNJFHpV+I7T4NmhsHs2bPNyJEjNRBse/36tfaP
        Hj0SZ8/U+StXrujY8+fPte/ouKIfMGPGDPPkyRMde/Xqlfa09vZ2M2rUKDW91aAlcIhFfxJcv1qwoNkT
        P6yQdJO/IhgsfBmbBw4caPbu3Rtn7QN8+/atPj948EDXoq0LFy7o2Pv377Xno/BfeNy5c0fHgm3Xrl1m
        0KBBPUBCfnUq+DYvL8fT2ilJ95pVO2QBjhkzRh3eNgC+efNGnw8dOmTGjRtnMjIyzJQpU9QH3QZI3IB5
        1rHebZ8+fdJ+3rx5Ou8CRb4UE6zYKVbyKH9pALSmtr5B6sCMN2/eVGaAs2Y+evSo6d+/v5k+fbquJ4pd
        d6Dho4wzzzrWHzt2TOfw2xcvXugzAYgcW5lYD4EH4FL9JlDgW90vgHimFi9ZskQZwfTly5f6TCWBKYL5
        OJiz1n6MbfgoUU/0s471WOb27ds6//HjR+1pixYt0rWufAigYulV4o+F+4MA6fGn/fv3KxPX4VeuXKkp
        hahnHSDR2Pnz5827d+/UX+lPnjyp5gYkPAFKylq+fHmcU3fbt2+fynMBQuEwhaBkH7mxgwH3uEW9TU+f
        aq5du6pMPn/+rP29e/dUcCgUSjD0IzHfxGIx09jYaOrr67Xn3ZrQ5+9XFPw3WOevXr1qpk6dmqjzAboM
        SE7USROcXtAUKcZtbW1tqsVgNPLOHioQZiX/zZo1q0cwQESztZANHuRQMOARXC9KeABIjvqJSQhhzc3N
        SX5D4ziGP7I5uMcyDY7bOfvMeXPz5s3Kz7oRlmpqatKPs+udPT9xJHthGdgFmARnDrY1a9bo8ctdb/e4
        QPoaJ3jWrl2r/GxOpS1YsEArVHCP4PsXIP9pB+wC/MPVpO03bNigmrTr3T3uWF/jI0eOMuvXr1d+tpE9
        0CQWDO4RfL9g7h95cZlSyjhe2RJne07e+KRd5+5xqa9xItz6pG3Pnj3TGMCPg3uEugRk5AdeXKZ+dKcn
        Ti6kFBpRiUlsdPcGJNU4ZKO7q6tL+dl248aNlNENH0lhnWhyrzthiXq8e/fuOJvu1tLSotoIHrMs9QaQ
        9UR2a2trnFN3o4YjL9We7OzsNnxyVXASQVQAW3HcxmGB86CtOMF97rslhOFvBA2HkmCzFcfd080r0grI
        ce6kXSDjepTCFDRymq3dx48fNwMGDFDBAGX9lwCy/sSJE7qfZnmRyPnoYOKHGBPXSgMkdMldQE8i5stJ
        DTRymVseDx8+rOkI07sVyOXDOIHGuiNHjsR3+gBt+uGUxbxN/C7AkpLSv9TW1nr6B0FosQ8sWSM8I4S7
        dKrGYYFTN06Pv5Go+TAsAHjGqfXuedI97u3Zs0fPq1amBchzHORSflDI9bVIqJgfUD0qDxs4OXPC5iTt
        NjcRA4K0smXLFrNu3TrNg7wHD7suQPjxUZz80aILkD4nJ/RzWVmxXB/ktlhZWS7X2HIOv78OXsJYjE+R
        jjiYundrcqe9z/wnDYD2oHL69Gk1sb3jWHCWwCF4VvAfQG+LcZ+0dMMFaDdboDj4tm3bVFCwEVj47JeA
        b9++Xd0BfvBNBVDob4DjT57eu8X2LqUJfXYBWuKLMT0+irMHb459NTTIeoKQ/Zg4FUBRkiTvfFNdHZ3h
        /mXjh0CCuIxXVJQtcTe6BFD8B1NBCxcu1ETc2dlpHj9+nPBTKtTTp081vXBPJw/iLuwBmPVBlzcXQa7U
        0WjZSv9nbfefFf3jaqmpyZ+UL/oTX+UycZkiRDSuJ3KCiiim1nPYRVsNDQ16PqQEEhysYz37grwsAVAu
        X39Gg5g6CaT7wkV8zpwqT2qoJznuj6geBqSmIFMIYRA1lwMrfkZtJ3lzWGA8CMjuse8oIw5wC4oKAoSS
        XgCJyQHJv2wx/W+CQiwFhX1pPNUcQcIdSEzcQpCkAgj1GCCa8E/UjvklFYSEUbsvILkqWGGWehsPztFj
        fqFOCZJwXwChlIOo3e9rNNlLkffkNLI8Ozvnoe/0fYPobQ7TQpKo/y4f/zs/zfT+r9xSykFLFqREnheJ
        FEjiL+sXjZa3iCCt9VYooHsDLmDk2a6LXBRaUVFR+pX/Vzk5inujlIOWLMjc3LC6wbx5TV51daUmfvHb
        TNFqq4Bok/d2AfVQ+l+kfx7vH4o522XdPgHWIi6TGY1WCt+axE98/pqlkptMMe/fwhYI4Ljp1tEAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>